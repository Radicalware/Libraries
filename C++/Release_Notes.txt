---------------------------------------------------------------------

                   !!! Release Highlights !!!

---------------------------------------------------------------------

07/05/2021 >> Libs 17.0.0

Cmake Upgrades. Also, I have started to change the naming scheme to
pascal case. This is because more and more of C++ is going into
that direction. Most of the frameworks I like to use are in pascal
casing. If I was intending to use the stl/boost libs a lot, I may
think otherwise but the whole point of this lib set was to be
used as an alternative, hence to the start of changinge the casing.

The New lib is CudaBridge! (Currently only tested on Windows)
It helps you manage your memory between your host and your device

Note: The version jumped because now it reflects Modules as well
as Xplatform instead of just Xplatform

---------------------------------------------------------------------

03/30/2020 >> Libs v15.0.0

Date Object added (hence the new version), and as always, this is 
pretty beta, it is likely to have many changes comming to it.
Nexus object update changed
Nexus<>::Add_Job(Nexus_Mutex, Object, &Function, Args...);
This reads much more easily than swapping the location of the 
object and Function. Object used to be a part of Args...

---------------------------------------------------------------------

02/22/2020 >> Libs v14.0.2

Various hotfixes and updates, no new functionality
One change to build process though; I created a powershell script...
Unix_n_Windows_Scripts/Install/copy_headers.ps1
that will copy your headers links to your headers dir after
installing your libs. This is not required if you don't intend to
modify the Radicalware libs. It requires admin rights on Windows.

---------------------------------------------------------------------

01/11/2020 >> Libs v14.0.1

CMake build scripts updated
xstring now has more re2 functionality

---------------------------------------------------------------------

01/05/2020 >> Libs v14.0.0

Google's re2 has been added to the modded objcts folder.
No actual mods have been done on it yet, only to Google's build
process.

Socket.h now has TCP communication (along with windows TCP
networking that came with the last build). 
I aim to get UDP but it may be a while. It isn't a huge priority 
for me at the moment. 

Next release will be upgrading xstring to use Google's re2 which
is WAY faster than the std::regex

---------------------------------------------------------------------

12/21/2019 >> Libs v13.0.0

Socket.h has been released (hence going from 12 to 13). 
It only works on windows, a linux version will come out soon along
with improvments. 

Big changes have been made to the build process. Before, you were
almost required to use PowerShell to build your programs on 
Win and Nix, now you can just use cmake normally but I still use
the powershell scripts for convenience. 
Colors have been added to the xstring and other misc adjustments 
have been made.

---------------------------------------------------------------------

11/14/2019 >> Libs v12.5.0

The biggest change is Nexus<void> aka Nexus<> is now a static class.
Also, Nexus<> uses NX_Mutex to manage specific tasks per job.
That way you can update the same object with Nexus under multiple
jobs at one time and it also be thread safe!!. (updated example)
Cmake file restructuring was done and xprocs now don't wait to
finish, instead you must use Nexus<>::Wait_All(); OS.h is now
mostly static so in most cases you won't need make it a global obj
but it can still be handy. Also, OS now has a File object and
a CMD object that can be used easily retrieve data. Other minor
changes were done as well. 

---------------------------------------------------------------------

11/08/2019 >> Libs v12.4.0

I discovered that C libs are often faster than C++ libs and in 
this case I found out it was one of the big reasons why the afs
(Advanced File Search) tool was not running as fast as I wanted.
I created a function in the OS.h that will read text fast and throw
an exception if it turns out it is a binary file. You can
view the afs tool in the Haste repo for an example.

---------------------------------------------------------------------

11/06/2019 >> Libs v12.3.0

Upgraded the "findall" for xstring and re function namespace.
Now, findall will search the whole text at once
"findwalk" was added which will find values as it walks your text 
line by line. "search" was added which returns a xvector<xstring>
of all the captured values in a specific order.

---------------------------------------------------------------------

10/30/2019 >> Libs v12.2.0

Nexus was greatly slowed down due to Base class not being a pod.
It's speed has been almost doubled to my suprise. xvector
now has new functionality and a much different configuration with 
two new base-classes and minimal increase in code due to no
repeating constructors. 

---------------------------------------------------------------------

10/25/2019 >> Libs v12.1.0

Timer.h was added.
Lots of multi-threading integration has been made for xvector/xmap
using Nexus.h

---------------------------------------------------------------------

10/09/2019 >> Libs v11.0.3

Nexus had a memory leak that was removed

---------------------------------------------------------------------

10/09/2019 >> Libs v11.0.2

Since Release, Nexus is pretty well established.
exception handling, recalling values, 
cross-instance thread limiter, cross-platform, etc.

---------------------------------------------------------------------

10/08/2019 >> Libs v11.0.1

Nexus is still in beta.
It is working decently well in windows but is broken in Linux.
It will be updated soon.

---------------------------------------------------------------------




